@model PaginatedList<OrderResponseVM>

@{
    ViewData["Title"] = "Orders";
    ViewData["Head"] = "Order Management";
    ViewData["PageTitle"] = "Orders";
    Layout = "_AdminLayout";
}

<div class="content mt-5 main-content">
    <section id="orders">
        <h3>Orders</h3>
        <div class="row">
            <form asp-action="Index" method="get" class="d-flex justify-content-between">
                <div class="input-group">

                    <!-- 🔎 Search -->
                    <input type="text"
                           class="form-control"
                           placeholder="Search by user name"
                           name="searchTerm"
                           value="@(ViewData["SearchTerm"] ?? "")" />

                    <!-- ↕️ Sort Field -->
                    <select class="form-select" name="sortField">
                        <option value="name" selected="@(ViewData["SortField"] as string == "name")">Name</option>
                        <option value="createdAt" selected="@(ViewData["SortField"] as string == "createdAt")">CreatedAt</option>
                        <option value="updatedAt" selected="@(ViewData["SortField"] as string == "updatedAt")">UpdatedAt</option>
                    </select>

                    <select class="form-select" name="sortOrder">
                        <option value="asc" selected="@(ViewData["SortOrder"] as string == "asc")">↑ Asc</option>
                        <option value="desc" selected="@(ViewData["SortOrder"] as string == "desc")">↓ Desc</option>
                    </select>

                    <button class="btn btn-outline-secondary" type="submit">Apply</button>
                </div>
            </form>
        </div>
        <table class="table table-dark table-bordered table-hover shadow-sm rounded table-dark-mode">
            <thead>
                <tr>
                    <th class="text-center align-middle">Order ID</th>
                    <th class="text-center align-middle">User ID</th>
                    <th class="text-center align-middle">User Name</th>
                    <th class="text-center align-middle">Status</th>
                    <th class="text-center align-middle">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var order in Model.Items)
                {
                    <tr>
                        <td class="text-center align-middle">@order.Id</td>
                        <td class="text-center align-middle">@order.UserId</td>
                        <td class="text-center align-middle">@order.UserName</td>
                        <td class="text-center align-middle">
                            @if (order.Status == OrderStatus.Delivered)
                            {
                                <button type="button" class="btn btn-sm @GetStatusClass(order.Status)" disabled>
                                    <i class="@GetStatusIcon(order.Status)"></i> @order.Status
                                </button>
                            }
                            else
                            {
                                <a href="#" class="update-order-status btn btn-sm @GetStatusClass(order.Status)"
                                   data-order-id="@order.Id"
                                   data-status="@order.Status">
                                    <i class="@GetStatusIcon(order.Status)"></i> @order.Status
                                </a>
                            }
                        </td>


                        <td class="text-center align-middle">
                            <div class="d-flex justify-content-center gap-2">

                                <!-- View Button -->
                                <a class="btn btn-primary btn-sm" asp-action="Details" asp-controller="Orders" asp-route-id="@order.Id">
                                    <i class="mdi mdi-eye-outline me-1"></i> View
                                </a>

                                <!-- Cancel Button -->
                                @if(order.Status!=OrderStatus.Delivered)
                                {
                                       @if (order.Status == OrderStatus.Cancelled)
                                       {
                                           <span class="btn btn-secondary btn-sm disabled">
                                               <i class="mdi mdi-cancel"></i> Cancelled
                                           </span>
                                       }
                                       else
                                       {
                                           <a href="#" id="cancel-order-btn" data-order-id="@order.Id" class="btn btn-warning btn-sm">
                                               <i class="mdi mdi-close-circle-outline me-1"></i> Cancel
                                           </a>
                                       }

                                       <!-- Delete Button -->
                                       <a href="#" id="delete-order-btn" data-order-id="@order.Id" class="btn btn-danger btn-sm">
                                           <i class="mdi mdi-delete-outline me-1"></i> Delete
                                       </a>
                                }
                            </div>
                        </td>

                    </tr>
                }
            </tbody>
        </table>

        <!-- ✅ Pagination Section -->
        @await Html.PartialAsync("_PaginationPartial", new PaginationVM
        {
            CurrentPage = Model.PageIndex,
            TotalPages = Model.TotalPages,
            HasPreviousPage = Model.HasPreviousPage,
            HasNextPage = Model.HasNextPage,
            SearchTerm = ViewData["SearchTerm"]?.ToString(),
            SortField = ViewData["SortField"]?.ToString(),
            SortOrder = ViewData["SortOrder"]?.ToString(),
            Controller = "Orders"
        })

    </section>
</div>

@section Scripts {
    @Html.AntiForgeryToken()
    <script src="~/orders/js/cancelorder.js" asp-append-version="true"></script>
    <script src="~/orders/js/deleteorder.js" asp-append-version="true"></script>
    <script src="~/orders/js/updatestatus.js" asp-append-version="true"></script>
}

@functions {
    string GetStatusClass(string status)
    {
        return status switch
        {
            OrderStatus.Paid => "text-success",
            OrderStatus.Cancelled => "text-danger",
            OrderStatus.Delivered => "text-success",
            _ => "text-warning"
        };
    }

    string GetStatusIcon(string status)
    {
        return status switch
        {
            OrderStatus.Paid => "bi bi-cash-coin",
            OrderStatus.Delivered => "bi bi-check-circle",
            OrderStatus.InProcess => "bi bi-hourglass-split",
            OrderStatus.Shipped => "bi bi-truck",
            _ => "bi bi-question-circle"
        };
    }
}


