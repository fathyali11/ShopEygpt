@model PaginatedList<ProductReponseForAdmin>
@{
    ViewData["Title"] = "Index";
    ViewData["Head"] = "Product Management";
    ViewData["PageTitle"] = "Products";
    Layout = "_AdminLayout";
}

<div class="content mt-5 main-content">
    <section id="products">
        <h3>Products</h3>
        <div class="row d-flex justify-content-between align-items-center mb-3">
            <div class="col-auto">
                <a asp-action="Create" asp-controller="Product"
                   class="btn btn-primary text-dark bg-opacity-10 btn-sm"
                   data-bs-toggle="tooltip" title="Add a new product">
                    Add Product
                </a>
            </div>

            <div class="col">
                <form asp-action="Index" method="get" class="d-flex justify-content-end">
                    <div class="input-group">

                        <!-- 🔎 Search -->
                        <input type="text"
                               class="form-control"
                               placeholder="Search by name or category"
                               name="searchTerm"
                               value="@(ViewData["SearchTerm"] ?? "")" />

                        <!-- ↕️ Sort Field -->
                        <select class="form-select" name="sortField">
                            <option value="name" selected="@(ViewData["SortField"] as string == "name")">Name</option>
                            <option value="category" selected="@(ViewData["SortField"] as string == "category")">Category</option>
                            <option value="price" selected="@(ViewData["SortField"] as string == "price")">Price</option>
                        </select>

                        <select class="form-select" name="sortOrder">
                            <option value="asc" selected="@(ViewData["SortOrder"] as string =="asc")">↑ Asc</option>
                            <option value="desc" selected="@(ViewData["SortOrder"] as string == "desc")">↓ Desc</option>
                        </select>

                        <button class="btn btn-outline-secondary" type="submit">Apply</button>
                    </div>
                </form>
            </div>
        </div>

        <!-- Table -->
        <table class="table table-dark table-bordered table-hover shadow-sm rounded table-dark-mode">
            <thead>
                <tr>
                    <th class="text-center">Name</th>
                    <th class="text-center">Price</th>
                    <th class="text-center">Category</th>
                    <th class="text-center">Image</th>
                    <th class="text-center">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var product in Model.Items)
                {
                    <tr>
                        <td class="text-center">@product.Name</td>
                        <td class="text-center">@product.Price.ToString("C")</td>
                        <td class="text-center">@product.CategoryName</td>
                        <td class="text-center">
                            @if (!string.IsNullOrEmpty(product.ImageName))
                            {
                                <img src="@product.ImageName" width="100" height="100" style="border-radius:3px;" alt="Product Image" />
                            }
                            else
                            {
                                <span>No Image</span>
                            }
                        </td>
                        <td class="text-center">
                            <div class="d-flex justify-content-center gap-2">
                                <a class="btn btn-success btn-sm" asp-action="Edit" asp-route-id="@product.Id">Edit</a>
                                <a href="#" data-controller-name="Product" class="btn btn-danger btn-sm delete-btn" data-id="@product.Id">Delete</a>
                                <a class="btn btn-info btn-sm" asp-action="Details" asp-route-id="@product.Id">Details</a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <!-- Pagination -->
        @{
            var totalPages = Model.TotalPages;
            var currentPage = Model.PageIndex;
            int maxVisiblePages = 5;
            int startPage = Math.Max(1, currentPage - maxVisiblePages / 2);
            int endPage = Math.Min(totalPages, startPage + maxVisiblePages - 1);
            if (endPage - startPage + 1 < maxVisiblePages)
            {
                startPage = Math.Max(1, endPage - maxVisiblePages + 1);
            }
        }

        @if (Model.TotalPages > 1)
        {
            <nav aria-label="Pagination" class="mt-4">
                <ul class="pagination justify-content-center">
                    @if (Model.HasPreviousPage)
                    {
                        <li class="page-item">
                            <a class="page-link"
                               asp-action="Index"
                               asp-route-pageNumber="@(Model.PageIndex - 1)"
                               asp-route-searchTerm="@ViewData["SearchTerm"]"
                               asp-route-sortField="@ViewData["SortField"]"
                               asp-route-sortOrder="@ViewData["SortOrder"]">Previous</a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item disabled"><span class="page-link">Previous</span></li>
                    }

                    @for (int i = startPage; i <= endPage; i++)
                    {
                        if (i == Model.PageIndex)
                        {
                            <li class="page-item active"><span class="page-link">@i</span></li>
                        }
                        else
                        {
                            <li class="page-item">
                                <a class="page-link"
                                   asp-action="Index"
                                   asp-route-pageNumber="@i"
                                   asp-route-searchTerm="@ViewData["SearchTerm"]"
                                   asp-route-sortField="@ViewData["SortField"]"
                                   asp-route-sortOrder="@ViewData["SortOrder"]">@i</a>
                            </li>
                        }
                    }

                    @if (Model.HasNextPage)
                    {
                        <li class="page-item">
                            <a class="page-link"
                               asp-action="Index"
                               asp-route-pageNumber="@(Model.PageIndex + 1)"
                               asp-route-searchTerm="@ViewData["SearchTerm"]"
                               asp-route-sortField="@ViewData["SortField"]"
                               asp-route-sortOrder="@ViewData["SortOrder"]">Next</a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item disabled"><span class="page-link">Next</span></li>
                    }
                </ul>
            </nav>
        }
    </section>
</div>

@section Scripts {
    @Html.AntiForgeryToken()
    <script src="~/common/js/delete.js" asp-append-version="true"></script>
}
